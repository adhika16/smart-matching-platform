<?php

namespace App\Console\Commands;

use App\Models\OpportunityOwnerProfile;
use App\Models\User;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

class CreateDemoUsersCommand extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'demo:create-users';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Create demo users (admin, creative, and opportunity owner) with autogenerated secure passwords';

    /**
     * Execute the console command.
     */
    public function handle(): int
    {
        $this->info('Creating demo users...');

        // Admin user
        $adminEmail = 'admin@example.com';
        if (!User::where('email', $adminEmail)->exists()) {
            $adminPassword = Str::random(12);
            User::create([
                'name' => 'Admin User',
                'email' => $adminEmail,
                'password' => Hash::make($adminPassword),
                'user_type' => 'creative',
                'is_admin' => true,
                'email_verified_at' => now(),
            ]);
            $this->info("✅ Admin user created:");
            $this->info("   Email: {$adminEmail}");
            $this->info("   Password: {$adminPassword}");
        } else {
            $this->warn("⚠️  Admin user already exists: {$adminEmail}");
        }

        // Creative user
        $creativeEmail = 'creative@example.com';
        if (!User::where('email', $creativeEmail)->exists()) {
            $creativePassword = Str::random(12);
            User::create([
                'name' => 'Demo Creative',
                'email' => $creativeEmail,
                'password' => Hash::make($creativePassword),
                'user_type' => 'creative',
                'is_admin' => false,
                'email_verified_at' => now(),
            ]);
            $this->info("✅ Creative user created:");
            $this->info("   Email: {$creativeEmail}");
            $this->info("   Password: {$creativePassword}");
        } else {
            $this->warn("⚠️  Creative user already exists: {$creativeEmail}");
        }

        // Opportunity Owner user
        $ownerEmail = 'owner@example.com';
        if (!User::where('email', $ownerEmail)->exists()) {
            $ownerPassword = Str::random(12);
            $owner = User::create([
                'name' => 'Demo Opportunity Owner',
                'email' => $ownerEmail,
                'password' => Hash::make($ownerPassword),
                'user_type' => 'opportunity_owner',
                'is_admin' => false,
                'email_verified_at' => now(),
            ]);

            OpportunityOwnerProfile::create([
                'user_id' => $owner->id,
                'company_name' => 'Demo Company',
                'is_verified' => true,
                'verified_at' => now(),
            ]);

            $this->info("✅ Opportunity Owner user created and verified:");
            $this->info("   Email: {$ownerEmail}");
            $this->info("   Password: {$ownerPassword}");
        } else {
            $this->warn("⚠️  Opportunity Owner user already exists: {$ownerEmail}");
        }

        $this->newLine();
        $this->warn("🔐 Please save these passwords securely. They will not be shown again.");
        $this->info("🎉 Demo users creation completed!");

        return self::SUCCESS;
    }
}
